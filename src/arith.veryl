module Arith #(
    param Width: u32 = 4,
) (
    a  : input  logic<Width>,
    b  : input  logic<Width>,
    sub: input  logic       ,
    r  : output logic<Width>,
    v  : output logic       ,
    c  : output logic       ,
) {
    /* verilator lint_off UNOPTFLAT */
    var ca: logic<Width + 1>;

    assign ca[0] = sub;
    assign v     = ca[msb] ^ ca[msb - 1];
    assign c     = ca[msb];

    for i in 0..Width :label {

        var cl: logic;

        assign cl = ca[i];

        inst full_add: FullAdder (
            a    : a[i]      ,
            b    : b[i] ^ sub,
            c    : cl        ,
            sum  : r[i]      ,
            carry: ca[i + 1] ,
        );
    }
}
