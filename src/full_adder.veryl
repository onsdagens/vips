// src/full_adder.veryl

module FullAdder (
    a    : input  logic,
    b    : input  logic,
    c    : input  logic,
    sum  : output logic,
    carry: output logic,
) {
    assign sum   = a ^ b ^ c;
    assign carry = (a & b) | (a & c) | (b & c);
}

#[test(full_adder)]
embed (inline) sv{{{
    module test;
        logic a;
        logic b;
        logic c;
        logic sum;
        logic carry;
        vips_FullAdder full_adder (a, b, c, sum, carry);

        initial begin
            // without carry in
            a = 0; b = 0; c = 0;
            #10;
            assert (sum == 0 && carry == 0) else $error("0+0+0");

            a = 1; b = 0; c = 0;
            #10;
            assert (sum == 1 && carry == 0) else $error("1+0+0");

            a = 0; b = 1; c = 0;
            #10;
            assert (sum == 1 && carry == 0) else $error("0+1+0");

            a = 1; b = 1; c = 0;
            #10;
            assert (sum == 0 && carry == 1) else $error("1+1+0");

            // with carry in
            a = 0; b = 0; c = 1;
            #10;
            assert (sum == 1 && carry == 0) else $error("0+0+1");

            a = 1; b = 0; c = 1;
            #10;
            assert (sum == 0 && carry == 1) else $error("1+0+1");

            a = 0; b = 1; c = 1;
            #10;
            assert (sum == 0 && carry == 1) else $error("0+1+1");

            a = 1; b = 1; c = 1;
            #10;
            assert (sum == 1 && carry == 1) else $error("1+1+1");

            $finish;
        end
    endmodule
}}}
