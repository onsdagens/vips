#[test(arith)]
embed (inline) sv{{{
        module test;
        /* verilator lint_off UNOPTFLAT */

        logic [3:0] a;
        logic [3:0] b;
        logic sub;
        logic [3:0] r;
        logic v;
        logic c;

        vips_Arith arith (a, b, sub, r, v, c);

        initial begin
            a = 0; b = 0; sub = 0;
            #10;
            assert (r == 0 & v == 0 & c == 0) else $error("0+0");

            a = 5; b = 2; sub = 0;
            #10;
            assert (r == 7 & v == 0 & c == 0) else $error("5+2");

            a = 5; b = 3; sub = 0;
            #10;
            // 0111
            //  0101
            //  0011
            // 01000
            assert (r == 8 & v == 1 & c == 0) else $error("5+3, V ", r, " ", v, " ", c);

            a = 5; b = 10; sub = 0;
            #10;
            //  0
            //  0101 5
            //  1010 -6
            // 01111
            assert (r == 15 & v == 0 & c == 0) else $error("5+10 ", r, " ", v, " ", c);

            a = 5; b = 11; sub = 0;
            #10;
            //  111
            //  0101 5
            //  1011 -5
            // 10000
            assert (r == 0 & v == 0 & c == 1) else $error("5+11 ", r, " ", v, " ", c);

            a = 5; b = 3; sub = 1;
            #10;
            assert (r == 2 & v == 0 & c == 1) else $error("5-3 C", r, " ", v, " ", c);

            a = 5; b = 6; sub = 1;
            #10;
            assert (r == 15 & v == 0 & c == 0) else $error("5-6 C", r, " ", v, " ", c);

            a = 5; b = -3; sub = 1;
            #10;

            // 0111
            //  0101 5
            //  0011 (--3)
            //  ----
            // 01000
            assert (r == 8 & v == 1 & c == 0) else $error("5-(-3) C", r, " ", v, " ", c);

            $finish;
        end
    endmodule
}}}
