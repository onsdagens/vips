// src/instr_mem.veryl

module InstrMem (
    i_addr : input  logic<32>,
    o_instr: output logic<32>,
) {
    always_comb {
        case i_addr {
            32'h0000_0000: o_instr = 32'b001000_00000_00001_0000000000000100; //   00 addi r1 zero 4   (r1 <- 4)
            32'h0000_0004: o_instr = 32'b101011_00000_00001_0000000000000000; //   04 sw   r1 0(zero)  (dm[0] <- 4)
            32'h0000_0008: o_instr = 32'b001000_00001_00010_0000000000001000; //   08 addi r2 r1 8,    (r2 <- 12)
            32'h0000_000c: o_instr = 32'b101011_00000_00010_0000000000000100; //   0c sw   r2 4(zero)  (dm[1] <- 12)
            32'h0000_0010: o_instr = 32'b100011_00001_00011_1111111111111100; //   10 lw   r3 -4(r1)   (r3 <- dm[0] = 4)
            32'h0000_0014: o_instr = 32'b100011_00001_00100_0000000000000000; //   14 lw   r4 0(r1)    (r4 <- dm[1] = 12)
            32'h0000_0018: o_instr = 32'b000100_00100_00100_0000000000000001; //   18 beq  r4 r4 1     (pc <- 0x20)
            32'h0000_001c: o_instr = 32'b100011_00001_00100_0000000000000000; //   1c lw   r4 0(r1)    (r4 <- dm[1] = 12)
            32'h0000_0020: o_instr = 32'b000101_00100_00000_1111111111111110; //   20 bne  r4 zero, -2 (pc <- 0x1c)



            // 32'h0000_0010: 32'b001000_00000_00010_0000000000000010, //   10 addi r2 zero 2   (r2 <- 2)
            // 32'h0000_0014: 32'b000000_00010_00001_00011_00000_100010, // 14 sub  r3 r2 r1    (r3 <- 2 - 8 = -6)
            // 32'h0000_0018: 32'b000000_00000_00011_00100_00000_101010, // 18 slt  r4 zero v1  (r4 <- zero < (-6) = 0)
            // 32'h0000_001c: 32'b001010_00011_00100_1111111111111011, //   1c slti r4 v1 -5    (r4 <- (-6) < (-5) = 1)
            // 32'h0000_0020: 32'b000000_00000_00100_00101_00000_101010, // 20 slt  r5 zero r1  (r5 <- 0 < 8 = 1)
            // 32'h0000_0024: 32'b000000_00011_00000_00110_00000_100101, // 24 or   r6 r3 zero  (r6 <- -6 | 0 = -6)
            // 32'h0000_0028: 32'b000000_00001_00011_00111_00000_100100, // 28 and  r7 r1 r3    (r7 <- b0..1000 & b1..1010 = b1000 )
            // 32'h0000_002c: 32'b000000_00001_00011_01000_00000_100111, // 2c nor  a4 at v1    (-- not supported --)
            default: o_instr = 32'b111111_00001_00000_0000000000000001; //   30 lui  zero 1      (-- not supported --)
        }
    }
}
//
#[test(instr_mem)]
embed (inline) sv{{{
    module test;
        logic [31:0] addr;
        logic [31:0] instr;

        vips_InstrMem instr_mem(addr, instr);

        logic [5:0] op;
        logic [5:0] funct;
        logic [4:0] rs;
        logic [4:0] rt;
        logic [4:0] rd;
        logic [15:0] imm;

        always_comb begin
            op = instr[31:26];
            rs = instr[25:21];
            rt = instr[20:16];
            rd = instr[15:11]; // r-type
            imm = instr[15:0]; // i-type
            funct = instr[5:0];
        end

        initial begin
            
            for ( addr = 0; addr < 'h34; addr = addr + 4) begin
	            #10;
            end
            
            $finish;
        end
    endmodule
}}}
